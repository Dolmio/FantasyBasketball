// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fantasy.web.ui.admin;

import java.util.List;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;

import fantasy.domain.GameStat;

privileged aspect GameStatView_Roo_VaadinEntityView {
    
    public String GameStatView.getEntityName() {
        return "Game Stat";
    }
    
    public Class<GameStat> GameStatView.getEntityClass() {
        return GameStat.class;
    }
    
    public boolean GameStatView.isCreateAllowed() {
        return true;
    }
    
    public boolean GameStatView.isUpdateAllowed() {
        return true;
    }
    
    public boolean GameStatView.isDeleteAllowed() {
        return true;
    }
    
    public List<GameStat> GameStatView.listEntities() {
        List<GameStat> list = GameStat.findAllGameStats();
        return list;
    }
    
    public GameStat GameStatView.saveEntity(GameStat entity) {
        if (entity == null) {
            return null;
        }
        return (GameStat) entity.merge();
    }
    
    public void GameStatView.deleteEntity(GameStat entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean GameStatView.isNewEntity(GameStat entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String GameStatView.getIdProperty() {
        return "id";
    }
    
    public String GameStatView.getVersionProperty() {
        return "version";
    }
    
    public GameStat GameStatView.createEntityInstance() {
        return new GameStat();
    }
    
    public Item GameStatView.getItemForEntity(GameStat entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<GameStat>(entity);
        }
        return item;
    }
    
    public GameStat GameStatView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<GameStat>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object GameStatView.getIdForEntity(GameStat entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void GameStatView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("player");
        table.addGeneratedColumn("player", new EntityTableColumnGenerator((String) getPlayerCaptionPropertyId()));
    }
    
    public Object GameStatView.getPlayerCaptionPropertyId() {
        return null;
    }
    
}
