// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fantasy.web.ui.admin;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.ui.Component;
import com.vaadin.ui.DateField;
import com.vaadin.ui.DefaultFieldFactory;
import com.vaadin.ui.Field;
import com.vaadin.ui.FormFieldFactory;
import com.vaadin.ui.TextField;
import com.vaadin.ui.TwinColSelect;
import fantasy.domain.Game;
import fantasy.domain.Round;
import java.lang.Class;
import java.lang.Long;
import java.lang.Object;
import java.lang.String;
import org.springframework.context.i18n.LocaleContextHolder;
import org.vaadin.addon.customfield.beanfield.BeanSetFieldWrapper;

privileged aspect RoundForm_Roo_VaadinAutomaticEntityForm {
    
    public FormFieldFactory RoundForm.getFormFieldFactory() {
        return new DefaultFieldFactory() {
            @Override
            public Field createField(Item item, Object propertyId, Component uiContext) {
                Field field = null;
                if (getIdProperty().equals(propertyId) || getVersionProperty().equals(propertyId)) {
                    return null;
                } else if ("games".equals(propertyId)) {
                    TwinColSelect select = buildGamesMultiSelect();
                    field = new BeanSetFieldWrapper<Game>(select, Game.class, getContainerForGames(), "id");
                    field.setCaption(createCaptionByPropertyId(propertyId));
                } else {
                    field = super.createField(item, propertyId, uiContext);
                    if (field instanceof TextField) {
                        ((TextField) field).setNullRepresentation("");
                    }
                    if (field instanceof DateField) {
                        ((DateField) field).setLocale(LocaleContextHolder.getLocale());
                        field.setInvalidAllowed(true);
                    }
                }
                return field;
            }
        };
    }
    
    public BeanContainer<Long, Game> RoundForm.getContainerForGames() {
        BeanContainer<Long, Game> container = new BeanContainer<Long, Game>(Game.class);
        container.setBeanIdProperty("id");
        for (Game entity : Game.findAllGames()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Class<Round> RoundForm.getEntityClass() {
        return Round.class;
    }
    
    public Object RoundForm.getGameCaptionPropertyId() {
        return null;
    }
    
    public String RoundForm.getIdProperty() {
        return "id";
    }
    
    public String RoundForm.getVersionProperty() {
        return "version";
    }
    
}
