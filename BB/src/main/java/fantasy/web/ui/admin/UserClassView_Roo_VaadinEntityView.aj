// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fantasy.web.ui.admin;

import java.util.List;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;

import fantasy.domain.UserClass;

privileged aspect UserClassView_Roo_VaadinEntityView {
    
    public String UserClassView.getEntityName() {
        return "User Class";
    }
    
    public Class<UserClass> UserClassView.getEntityClass() {
        return UserClass.class;
    }
    
    public boolean UserClassView.isCreateAllowed() {
        return true;
    }
    
    public boolean UserClassView.isUpdateAllowed() {
        return true;
    }
    
    public boolean UserClassView.isDeleteAllowed() {
        return true;
    }
    
    public List<UserClass> UserClassView.listEntities() {
        List<UserClass> list = UserClass.findAllUserClasses();
        return list;
    }
    
    public UserClass UserClassView.saveEntity(UserClass entity) {
        if (entity == null) {
            return null;
        }
        return (UserClass) entity.merge();
    }
    
    public void UserClassView.deleteEntity(UserClass entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean UserClassView.isNewEntity(UserClass entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String UserClassView.getIdProperty() {
        return "id";
    }
    
    public String UserClassView.getVersionProperty() {
        return "version";
    }
    
    public UserClass UserClassView.createEntityInstance() {
        return new UserClass();
    }
    
    public BeanContainer<Long, UserClass> UserClassView.getTableContainer() {
        BeanContainer<Long, UserClass> container = new BeanContainer<Long, UserClass>(UserClass.class);
        container.setBeanIdProperty("id");
        for (UserClass entity : UserClass.findAllUserClasses()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item UserClassView.getItemForEntity(UserClass entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<UserClass>(entity);
        }
        return item;
    }
    
    public UserClass UserClassView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<UserClass>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object UserClassView.getIdForEntity(UserClass entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void UserClassView.setupGeneratedColumns(Table table) {
        table.removeGeneratedColumn("team");
        table.addGeneratedColumn("team", new EntityTableColumnGenerator((String) getTeamCaptionPropertyId()));
    }
    
    public Object UserClassView.getRoleCaptionPropertyId() {
        return null;
    }
    
    public Object UserClassView.getTeamCaptionPropertyId() {
        return "name";
    }
    
}
