// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package fantasy.web.ui.admin;

import com.vaadin.data.Item;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItem;
import com.vaadin.ui.Table;
import fantasy.domain.PlayerPos;
import fantasy.web.ui.admin.EntityTableColumnGenerator;
import java.lang.Class;
import java.lang.Long;
import java.lang.Object;
import java.lang.String;
import java.util.List;

privileged aspect PlayerPosView_Roo_VaadinEntityView {
    
    public String PlayerPosView.getEntityName() {
        return "Player Pos";
    }
    
    public Class<PlayerPos> PlayerPosView.getEntityClass() {
        return PlayerPos.class;
    }
    
    public boolean PlayerPosView.isCreateAllowed() {
        return true;
    }
    
    public boolean PlayerPosView.isUpdateAllowed() {
        return true;
    }
    
    public boolean PlayerPosView.isDeleteAllowed() {
        return true;
    }
    
    public List<PlayerPos> PlayerPosView.listEntities() {
        List<PlayerPos> list = PlayerPos.findAllPlayerPoses();
        return list;
    }
    
    public PlayerPos PlayerPosView.saveEntity(PlayerPos entity) {
        if (entity == null) {
            return null;
        }
        return (PlayerPos) entity.merge();
    }
    
    public void PlayerPosView.deleteEntity(PlayerPos entity) {
        if (entity != null) {
            entity.remove();
        }
    }
    
    public boolean PlayerPosView.isNewEntity(PlayerPos entity) {
        return (entity != null && getIdForEntity(entity) == null);
    }
    
    public String PlayerPosView.getIdProperty() {
        return "id";
    }
    
    public String PlayerPosView.getVersionProperty() {
        return "version";
    }
    
    public PlayerPos PlayerPosView.createEntityInstance() {
        return new PlayerPos();
    }
    
    public BeanContainer<Long, PlayerPos> PlayerPosView.getTableContainer() {
        BeanContainer<Long, PlayerPos> container = new BeanContainer<Long, PlayerPos>(PlayerPos.class);
        container.setBeanIdProperty("id");
        for (PlayerPos entity : PlayerPos.findAllPlayerPoses()) {
            container.addBean(entity);
        }
        return container;
    }
    
    public Item PlayerPosView.getItemForEntity(PlayerPos entity) {
        Item item = getTable().getItem(entity.getId());
        if (item == null) {
            item = new BeanItem<PlayerPos>(entity);
        }
        return item;
    }
    
    public PlayerPos PlayerPosView.getEntityForItem(Item item) {
        if (item != null) {
            return ((BeanItem<PlayerPos>) item).getBean();
        } else {
            return null;
        }
    }
    
    public Object PlayerPosView.getIdForEntity(PlayerPos entity) {
        return entity != null ? entity.getId() : null;
    }
    
    public void PlayerPosView.setupGeneratedColumns(Table table) {
        // Add generated columns here
    }
    
    public Object PlayerPosView.getPlayerPositionCaptionPropertyId() {
        return null;
    }
    
}
