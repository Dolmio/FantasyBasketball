package fantasy.web.ui;

import java.text.DecimalFormat;
import java.util.Arrays;

import org.joda.time.LocalDate;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.HorizontalLayout;

import fantasy.domain.GameStat;
import fantasy.domain.Player;

public class PlayerDetailsCombinedComponent extends CustomComponent {


	@AutoGenerated
	private HorizontalLayout mainLayout;
	@AutoGenerated
	private PlayerDetailsComponent playerAverageComponent;
	@AutoGenerated
	private PlayerDetailsComponent lastMatchComponent;

	
	private static final long serialVersionUID = 1L;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public PlayerDetailsCombinedComponent() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		
	}

	public void updateContent(Player player) {
		GameStat newestStat = player.giveNewestStat();
		updateNewestStatComponent(newestStat);
		updateAverageStatComponent(player);

	}

	private void updateNewestStatComponent(GameStat stat){

		lastMatchComponent.setHeader("Viimeisin Ottelu:");
		String dateStr = "";
		String[] statValues = null;
		if(stat == null){
			statValues = new String[]{ "0", "0","0", "0","0", "0","0", "0.00","0", "0","0"};
			//so the layout size stays static vs sitsuation where there is dateStr
			dateStr = "0000-00-00";
		}
		else{
			statValues = new String[] {
					stat.getPoints().toString(),
					stat.getRebounds().toString(),
					stat.getAssists().toString(),
					stat.getBlocks().toString(),
					stat.getSteals().toString(),
					stat.getFgMade().toString(),
					stat.getFgAttempts().toString(),
					stat.giveFieldGoalPercentage().toString(),
					stat.getThreePointsMade().toString(),
					stat.getFtMade().toString(),
					stat.getTurnovers().toString()
			};
			dateStr =  new LocalDate(stat.getDateWhen()).toString();

		}

		lastMatchComponent.setFirstStatLabel("Päivämäärä", dateStr);
		lastMatchComponent.updateStatLabels(statValues);
	}

	private void updateAverageStatComponent(Player p){
		playerAverageComponent.setHeader("Koko kauden keskiarvot:");
		playerAverageComponent.setFirstStatLabel("Otteluita yhteensä:", String.valueOf(p.getStatCount()));
		
		//calculate sums of the stats
		double[] statSums  = new double[11];
		for(GameStat stat : p.getStats()){
			statSums[0] += stat.getPoints();
			statSums[1] += stat.getRebounds();
			statSums[2] += stat.getAssists();
			statSums[3] += stat.getBlocks();
			statSums[4] += stat.getSteals();
			statSums[5] += stat.getFgMade();
			statSums[6] += stat.getFgAttempts();
			statSums[7] += stat.giveFieldGoalPercentage();
			statSums[8] += stat.getThreePointsMade();
			statSums[9] += stat.getFtMade();
			statSums[10] += stat.getTurnovers();
		}
		String[] statAverages = new String[11];
		if(p.getStatCount() == 0){
			Arrays.fill(statAverages, "00.00");
		}
		else{
			for(int i = 0; i < statSums.length; i++){
				//calculate average and cut decimals after second.
				statAverages[i] = new DecimalFormat("#.##").format(statSums[i] / p.getStatCount());
			}
		}
		playerAverageComponent.updateStatLabels(statAverages);
	}

	@AutoGenerated
	private HorizontalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new HorizontalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		mainLayout.setSpacing(true);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// lastMatchComponent
		lastMatchComponent = new PlayerDetailsComponent();
		lastMatchComponent.setImmediate(false);
		lastMatchComponent.setWidth("-1px");
		lastMatchComponent.setHeight("-1px");
		mainLayout.addComponent(lastMatchComponent);
		
		// playerAverageComponent
		playerAverageComponent = new PlayerDetailsComponent();
		playerAverageComponent.setImmediate(false);
		playerAverageComponent.setWidth("-1px");
		playerAverageComponent.setHeight("-1px");
		mainLayout.addComponent(playerAverageComponent);
		
		return mainLayout;
	}



}
