package fantasy.web;

import com.vaadin.addon.jpacontainer.JPAContainer;
import com.vaadin.addon.jpacontainer.JPAContainerFactory;
import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.Alignment;
import com.vaadin.ui.Component;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Field;

import com.vaadin.ui.Label;
import com.vaadin.ui.Select;
import com.vaadin.ui.Table;
import com.vaadin.ui.TableFieldFactory;
import com.vaadin.ui.VerticalLayout;

import java.util.Arrays;
import java.util.Collection;
import java.util.Set;
import fantasy.domain.Player;
import fantasy.domain.Team;
import fantasy.domain.UserClass;
import fantasy.domain.positions.PlayerPosition;
import fantasy.domain.positions.TeamPosition;

import com.vaadin.data.Container;
import com.vaadin.data.Item;
import com.vaadin.data.Property;
import com.vaadin.data.util.BeanContainer;
import com.vaadin.data.util.BeanItemContainer;
import com.vaadin.data.util.filter.Compare;
import com.vaadin.data.util.filter.Compare.Equal;
public class OwnTeamView extends CustomComponent {

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private Table teamTable;
	@AutoGenerated
	private Label label_1;

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */



	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public OwnTeamView() {
		buildMainLayout();
		setCompositionRoot(mainLayout);
		teamTable.setEditable(true);
		


	}
	
	private void setTableFieldFactory(){
		teamTable.setTableFieldFactory(new TableFieldFactory() {

			@Override
			public Field createField(Container container, Object itemId,
					Object propertyId, Component uiContext) {
				if(propertyId.equals("currentPosition")){
					Select select = new Select();
					Collection<TeamPosition> items = Arrays.asList(TeamPosition.class.getEnumConstants());
					Container players = teamTable.getContainerDataSource();
					Set<PlayerPosition> possiblePositions = (Set<PlayerPosition>) players.getItem(itemId).getItemProperty("possiblePositions").getValue();
					System.out.println(itemId + " " + possiblePositions);
					for (TeamPosition teamPosition : items) {
						for(PlayerPosition possiblePosition : possiblePositions) {
							if(possiblePosition.canPlay(teamPosition)){
								select.addItem(teamPosition);
							}
						}
					}
					
					
				
					
					
					select.setNullSelectionAllowed(false);
					return (Field) select;
				}
				return null;
			}
		});
	}

	public void updateOwnTeamView(){
		Team currentTeam = FantasyApplication.getInstance().getCurrentUser().getTeam();
		JPAContainer<Player> playerContainer = JPAContainerFactory.make(Player.class, FantasyApplication.PERSISTENCE_UNIT);
		playerContainer.addContainerFilter(new Compare.Equal("team", currentTeam));
		System.out.println("playerSize:" + playerContainer.size());
		
		teamTable.setContainerDataSource(playerContainer);
		setTableFieldFactory();
		//teamTable.requestRepaint()
		teamTable.setVisibleColumns(new String[] {"lastName", "firstName", "possiblePositions", "currentPosition"});
		
	}
	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);

		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");

		// label_1
		label_1 = new Label();
		label_1.setImmediate(false);
		label_1.setWidth("-1px");
		label_1.setHeight("-1px");
		label_1.setValue("My Team");
		mainLayout.addComponent(label_1);
		mainLayout.setComponentAlignment(label_1, new Alignment(20));

		// teamTable
		teamTable = new Table();
		teamTable.setImmediate(false);
		teamTable.setWidth("-1px");
		teamTable.setHeight("-1px");
		mainLayout.addComponent(teamTable);
		mainLayout.setExpandRatio(teamTable, 1.0f);
		mainLayout.setComponentAlignment(teamTable, new Alignment(48));

		return mainLayout;
	}

}
